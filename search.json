[{"title":"ES6常用特性","url":"http://zputalk.com/2017/10/25/ES6常用特性/","content":"<h1 id=\"let-const和块级作用域\"><a href=\"#let-const和块级作用域\" class=\"headerlink\" title=\"let const和块级作用域\"></a>let const和块级作用域</h1><p>const定义常量 let定义变量 let会使该变量处于一个块级作用域。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">'Hello World'</span>;</div><div class=\"line\">         str = <span class=\"string\">'Hello'</span>; <span class=\"comment\">// 报错</span></div><div class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">'Hello World'</span>;</div><div class=\"line\">str = <span class=\"string\">'Hello'</span>;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(str); <span class=\"comment\">// Hello</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"箭头函数\"><a href=\"#箭头函数\" class=\"headerlink\" title=\"箭头函数\"></a>箭头函数</h1><p>箭头函数对上下文的绑定是强制性的，无法通过 apply 或 call 方法改变其上下文。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">foo =&gt; foo + <span class=\"string\">'Hello'</span>;</div><div class=\"line\">(bar, foo) =&gt; foo + bar;</div><div class=\"line\">foo =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> foo + <span class=\"string\">'Hello'</span></div><div class=\"line\">&#125;</div><div class=\"line\">(bar, foo) =&gt; &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> bar + foo</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"模板字符串\"><a href=\"#模板字符串\" class=\"headerlink\" title=\"模板字符串\"></a>模板字符串</h1><p>支持赋值变量 支持换行<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> H = <span class=\"string\">'Hello'</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> W = <span class=\"string\">'World'</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">`javascript</span></div><div class=\"line\"><span class=\"string\">             <span class=\"subst\">$&#123;H&#125;</span></span></div><div class=\"line\"><span class=\"string\">             <span class=\"subst\">$&#123;W&#125;</span></span></div><div class=\"line\"><span class=\"string\">             `</span>;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(str) <span class=\"comment\">// javascript Hello World</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"对象字面量扩展法\"><a href=\"#对象字面量扩展法\" class=\"headerlink\" title=\"对象字面量扩展法\"></a>对象字面量扩展法</h1><p>省略 function<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">bar () &#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'bar'</span>);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>同名方法属性省略方法<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span>&#123;</div><div class=\"line\">    bar</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"表达式结构\"><a href=\"#表达式结构\" class=\"headerlink\" title=\"表达式结构\"></a>表达式结构</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">      bar: bar,</div><div class=\"line\">      foo: foo</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">let</span> &#123;bar, foo&#125; = bar();</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">let</span> [x,,y] = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>];</div><div class=\"line\"><span class=\"built_in\">console</span>.log(x); <span class=\"comment\">// 1</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(y); <span class=\"comment\">// 3</span></div></pre></td></tr></table></figure>\n<h1 id=\"函数参数表达、传参\"><a href=\"#函数参数表达、传参\" class=\"headerlink\" title=\"函数参数表达、传参\"></a>函数参数表达、传参</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">bar</span> (<span class=\"params\">x, y = <span class=\"number\">1</span>, z = <span class=\"number\">2</span></span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(x);</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(y);</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(z);</div><div class=\"line\">&#125;</div><div class=\"line\">bar(<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>); <span class=\"comment\">// a b 2</span></div></pre></td></tr></table></figure>\n<h1 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h1><p>是一组键值对的结构<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> arr = [[<span class=\"string\">'a'</span>, <span class=\"number\">1</span>], [<span class=\"string\">'b'</span>, <span class=\"number\">2</span>], [<span class=\"string\">'c'</span>, <span class=\"number\">3</span>]];</div><div class=\"line\"><span class=\"keyword\">let</span> m = <span class=\"keyword\">new</span> map(arr);</div><div class=\"line\">m.get(<span class=\"string\">'a'</span>); <span class=\"comment\">//获取 1;</span></div><div class=\"line\">m.set(<span class=\"string\">'d'</span>, <span class=\"number\">4</span>); <span class=\"comment\">// 赋值</span></div><div class=\"line\">m.has(<span class=\"string\">'b'</span>); <span class=\"comment\">// true</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h1><p>set也为key的集合，key不允许重复<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">let</span> s = <span class=\"keyword\">new</span> set (arr);  <span class=\"comment\">// [1,2,3,4]</span></div><div class=\"line\">s.add(<span class=\"number\">5</span>);               <span class=\"comment\">// [1,2,3,4,5]</span></div><div class=\"line\">s.delete(<span class=\"number\">1</span>)             <span class=\"comment\">// [2,3,4,5]</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"class\"><a href=\"#class\" class=\"headerlink\" title=\"class\"></a>class</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> <span class=\"keyword\">extends</span> <span class=\"title\">Animal</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span> (name, age, gender) &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>();</div><div class=\"line\">        <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">        <span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">        <span class=\"keyword\">this</span>.gender = gender;</div><div class=\"line\">    &#125;</div><div class=\"line\">    say () &#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.name);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Man</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">constructor</span> (name, age, 'man') &#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>(name, age, <span class=\"string\">'man'</span>)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">let</span> me = <span class=\"keyword\">new</span> Man(<span class=\"string\">'xiaoming'</span>, <span class=\"number\">22</span>);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(me.say());</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Man</span> </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// ...</span></div><div class=\"line\">  <span class=\"keyword\">static</span> isMan(obj) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> obj <span class=\"keyword\">instanceof</span> Man</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"keyword\">let</span> me = <span class=\"keyword\">new</span> Man()</div><div class=\"line\"><span class=\"built_in\">console</span>.log(Man.isMan(me)) <span class=\"comment\">//=&gt; true</span></div></pre></td></tr></table></figure>\n<h1 id=\"生成器\"><a href=\"#生成器\" class=\"headerlink\" title=\"生成器\"></a>生成器</h1>","categories":["ES6"],"tags":["ES6,ES2015"]},{"title":"webpack基本的配置","url":"http://zputalk.com/2017/10/24/webpack的基本配置/","content":"<h1 id=\"webpack的主要功能\"><a href=\"#webpack的主要功能\" class=\"headerlink\" title=\"webpack的主要功能\"></a>webpack的主要功能</h1><p>代码分块： webpack有两种模块依赖，一种是异步，一种是同步，编译时可以将代码分为代码块，代码块可以实现按需加载。<br>Loaders：webpack只会处理js，为了将其他资源也定义为模块，并转化为javascript，webpack定义了不同的loaders，不同的loaders可以将对应的资源转化为javascript模块。<br>智能模块解析：webpack可以很容易的将第三方库转化为模块集成到项目代码中<br>webpack的可定制化插件系统，本身也是通过插件的方式实现。</p>\n<h1 id=\"webpack的安装配置\"><a href=\"#webpack的安装配置\" class=\"headerlink\" title=\"webpack的安装配置\"></a>webpack的安装配置</h1><p>webpack是基于node实现的，安装node。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">官网下载安装 http:<span class=\"comment\">//nodejs.cn/download/</span></div><div class=\"line\">终端安装 brew install node</div></pre></td></tr></table></figure></p>\n<p>终端安装webpack-cli<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew install webpack -g</div></pre></td></tr></table></figure></p>\n<p>新建一个demo项目 -&gt; 新建build文件夹  -&gt; 新建webpack.config.js<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">mkdir webpack-demo</div><div class=\"line\"><span class=\"built_in\">cd</span> webpack-demo</div><div class=\"line\">mkdir dist</div><div class=\"line\">mkdir src</div><div class=\"line\"><span class=\"built_in\">cd</span> src</div><div class=\"line\">touch index.js</div><div class=\"line\"><span class=\"built_in\">cd</span> ..</div><div class=\"line\">touch index.html</div><div class=\"line\">touch webpack.config.js</div></pre></td></tr></table></figure></p>\n<p>项目结构<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">--dist</div><div class=\"line\">--src</div><div class=\"line\">  -- index.js</div><div class=\"line\">--index.html</div><div class=\"line\">--webpack.config.js</div></pre></td></tr></table></figure></p>\n<p>webpack.config.js中的配置大致分为以下结构<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</div><div class=\"line\">    entry: [],      <span class=\"comment\">// 入口文件</span></div><div class=\"line\">    output: &#123;&#125;,     <span class=\"comment\">// 出口文件</span></div><div class=\"line\">    <span class=\"built_in\">module</span>:&#123;        <span class=\"comment\">// 各种loader</span></div><div class=\"line\">        loader: [</div><div class=\"line\">            &#123;&#125;</div><div class=\"line\">        ]</div><div class=\"line\">    &#125;,</div><div class=\"line\">    devServer: &#123;    <span class=\"comment\">// webpack起的服务器</span></div><div class=\"line\"></div><div class=\"line\">    &#125;,</div><div class=\"line\">    plugins: []     <span class=\"comment\">// 插件</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>入口（entry）<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exprots = &#123;</div><div class=\"line\">    entry: [__dirname + <span class=\"string\">'/src/index.js'</span>]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>出口（output）<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exprots = &#123;</div><div class=\"line\">    entry: [__dirname + <span class=\"string\">'/src/index.js'</span>],</div><div class=\"line\">    output: &#123;</div><div class=\"line\">        path: path.resolve(__dirname + <span class=\"string\">'/dist'</span>),</div><div class=\"line\">        filename: <span class=\"string\">'bundle.js'</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>loaders<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exprots = &#123;</div><div class=\"line\">    entry: [__dirname + <span class=\"string\">'/src/index.js'</span>],</div><div class=\"line\">    output: &#123;</div><div class=\"line\">        path: path.resolve(__dirname + <span class=\"string\">'/dist'</span>),</div><div class=\"line\">        filename: <span class=\"string\">'bundle.js'</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"built_in\">module</span>: &#123;</div><div class=\"line\">      loader: [</div><div class=\"line\">          &#123;</div><div class=\"line\">              test: <span class=\"regexp\">/\\.(css|scss)$/</span>, <span class=\"comment\">// 编译css</span></div><div class=\"line\">              exclude: <span class=\"regexp\">/common/</span>,</div><div class=\"line\">              loader: <span class=\"string\">\"style-loader!css-loader!postcss-loader!sass-loader\"</span></div><div class=\"line\">          &#125;,</div><div class=\"line\">          &#123;</div><div class=\"line\">              test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"comment\">// js代码检查</span></div><div class=\"line\">              exclude: <span class=\"regexp\">/node_modules/</span>,</div><div class=\"line\">              loader: <span class=\"string\">'eslint-loader'</span></div><div class=\"line\">          &#125;</div><div class=\"line\">      ]  </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>插件(Plugins)<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>); <span class=\"comment\">//动态引入js和css 配置html入口</span></div><div class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">module</span>.exprots = &#123;</div><div class=\"line\">    entry: [__dirname + <span class=\"string\">'/src/index.js'</span>],</div><div class=\"line\">    output: &#123;</div><div class=\"line\">        path: path.resolve(__dirname + <span class=\"string\">'/dist'</span>),</div><div class=\"line\">        filename: <span class=\"string\">'bundle.js'</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"built_in\">module</span>: &#123;</div><div class=\"line\">      loader: [</div><div class=\"line\">          &#123;</div><div class=\"line\">              test: <span class=\"regexp\">/\\.(css|scss)$/</span>, <span class=\"comment\">// 编译css</span></div><div class=\"line\">              exclude: <span class=\"regexp\">/common/</span>,</div><div class=\"line\">              loader: <span class=\"string\">\"style-loader!css-loader!postcss-loader!sass-loader\"</span></div><div class=\"line\">          &#125;,</div><div class=\"line\">          &#123;</div><div class=\"line\">              test: <span class=\"regexp\">/\\.js$/</span>, <span class=\"comment\">// js代码检查</span></div><div class=\"line\">              exclude: <span class=\"regexp\">/node_modules/</span>,</div><div class=\"line\">              loader: <span class=\"string\">'eslint-loader'</span></div><div class=\"line\">          &#125;</div><div class=\"line\">      ]  </div><div class=\"line\">    &#125;,</div><div class=\"line\">    plugins: [</div><div class=\"line\">        <span class=\"keyword\">new</span> HtmlWebpackPlugin(&#123;<span class=\"attr\">template</span>: <span class=\"string\">'./dist/index.html'</span>&#125;)</div><div class=\"line\">    ]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>以上本文提到path.resolve 和__dirname 可看我另一篇path</p>\n","categories":["webpack"],"tags":["webpack"]},{"title":"node中的path模块","url":"http://zputalk.com/2017/10/24/node中的path模块/","content":"<h1 id=\"path-join\"><a href=\"#path-join\" class=\"headerlink\" title=\"path.join()\"></a>path.join()</h1><p>连接path的片段，并生成规范的路径，长度为0的path会被忽略。连接后如果为一个长度为0的字符串则为 ‘.’,为当前这个目录。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> indexPath = path.join(<span class=\"string\">'/app'</span>, <span class=\"string\">'/home'</span>, <span class=\"string\">'tab'</span>, <span class=\"string\">'..'</span>)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(indexPath) <span class=\"comment\">// /app/home</span></div></pre></td></tr></table></figure></p>\n<h1 id=\"path-resolve\"><a href=\"#path-resolve\" class=\"headerlink\" title=\"path.resolve()\"></a>path.resolve()</h1><p>会解析一个路径或者路径片段为一个绝对路径，在给定的路径中从右向左进行处理。长度为0的path会被忽略。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</div><div class=\"line\"><span class=\"keyword\">const</span> indexPath = path.resolve(<span class=\"string\">'/app'</span>, <span class=\"string\">'/home'</span>, <span class=\"string\">'/A'</span>, <span class=\"string\">'/B'</span>, <span class=\"string\">'/C'</span>, <span class=\"string\">'../D'</span>)</div><div class=\"line\">其实就是调用终端的cd 和 pwd命令</div><div class=\"line\">cd app</div><div class=\"line\">cd home</div><div class=\"line\">cd A</div><div class=\"line\">cd B</div><div class=\"line\">cd C</div><div class=\"line\">cd ../D</div><div class=\"line\">pwd  输出: app/home/A/B/D</div></pre></td></tr></table></figure></p>\n<h1 id=\"dirname-和-filename\"><a href=\"#dirname-和-filename\" class=\"headerlink\" title=\"dirname 和 filename\"></a><strong>dirname 和 </strong>filename</h1><p>新建一个项目node_demo –&gt; 新建文件夹home –&gt; 新建文件 test.js<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">console</span>.log(__dirname) <span class=\"comment\">// node_demo/home</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(__filename) <span class=\"comment\">// node_demo/home/test.js</span></div></pre></td></tr></table></figure></p>\n","categories":["node"],"tags":["node"]},{"title":"","url":"http://zputalk.com/personal-style.css","content":"html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/bg.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\n","categories":[],"tags":[]},{"title":"about","url":"http://zputalk.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://zputalk.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://zputalk.com/project/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://zputalk.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://zputalk.com/tag/index.html","content":"","categories":[],"tags":[]}]